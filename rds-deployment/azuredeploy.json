{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "dnsLabelPrefix": {
      "type": "string",
      "metadata": {
        "description": "Unique gateway public DNS prefix for the deployment. The fqdn will look something like '<dnsname>.<location>.cloudapp.azure.com'. Up to 62 chars, digits or dashes, lowercase, should start with a letter: must conform to '^[a-z][a-z0-9-]{1,61}[a-z0-9]$'. For example johndns1 will result the final RDWEB access url like https://johndns1.westus.cloudapp.azure.com/RDWeb"
      }
    },
    "publicIPAddressName": {
      "type": "string",
      "metadata": {
        "description": "The name of gateway PublicIPAddress object"
      },
      "defaultValue": "gwpip"
    },
    "domainName": {
      "type": "string",
      "metadata": {
        "description": "The name of the AD domain. For example contoso.com"
      },
      "defaultValue": "contoso.com"
    },
    "adminUsername": {
      "type": "string",
      "metadata": {
        "description": "The name of the domain admin. Exclusion list: 'administrator'."
      },
      "defaultValue": "cloudadmin"
    },
    "adminPassword": {
      "type": "securestring",
      "metadata": {
        "description": "The password for domain admin account. Must meet domain admin password complexity requirements."
      }
    },
    "imageSKU": {
      "type": "string",
      "allowedValues": [
        "2012-R2-Datacenter",
        "2016-Datacenter"
      ],
      "metadata": {
        "description": "Windows server SKU"
      },
      "defaultValue": "2016-Datacenter"
    },
    "numberOfRdshInstances": {
      "type": "int",
      "defaultValue": 1,
      "metadata": {
        "description": "Number of Remote Desktop Session Host VMs"
      }
    },
    "rdshVmSize": {
      "type": "string",
      "defaultValue": "Standard_A2",
      "metadata": {
        "description": "The size of the RDSH VMs"
      }
    }
  },
    "variables": {
        "adTemplateAssetLocation": "https://raw.githubusercontent.com/Azure/Azure-QuickStart-Templates/master/active-directory-new-domain",
        "adVMSize": "Standard_A1",
        "vnetName": "[concat('ADVNET',resourceGroup().name)]",
        "subnetName": "[concat('ADStaticSubnet',resourceGroup().name)]",
        "staticSubnetID": "[concat(resourceId('Microsoft.Network/virtualNetworks', variables('vnetName')),'/subnets/', variables('subnetName'))]",
        "adStorageName": "[tolower(concat('adsa',uniqueString(resourceGroup().id)))]",
        "adVmDeployment": "CreateAdVms",
        "adVmDeploymentId": "[concat('Microsoft.Resources/deployments/', variables('adVmDeployment'))]",
        "deployPrimaryAdTemplateURL": "[concat(variables('adTemplateAssetLocation'),'/deployPrimaryAD.json')]",
        "deployPrimaryAd": "DeployPrimaryAd",
        "deployPrimaryAdID": "[concat('Microsoft.Resources/deployments/', variables('deployPrimaryAd'))]",
        "adPDCVMName": "advm",
        "vnetwithDNSTemplateURL": "[concat(variables('adTemplateAssetLocation'),'/vnet-with-dns-server.json')]",
        "updateVNetDNS1": "updateVNetDNS",
        "updateVNetDNS1ID": "[concat('Microsoft.Resources/deployments/', variables('updateVNetDNS1'))]",
        "nicTemplateURL": "[concat(variables('adTemplateAssetLocation'),'/nic.json')]",
        "publicLBName": "[concat('ADPLB',resourceGroup().name)]",
        "publicIPAddressID": "[resourceId('Microsoft.Network/publicIPAddresses',variables('publicIPAddressName'))]",
        "lbFE": "ADLBFE",
        "publiclbID": "[resourceId('Microsoft.Network/loadBalancers',variables('publicLBName'))]",
        "lbBE": "ADLBBE",
        "publicBEAddressPoolID": "[concat(variables('publiclbID'),'/backendAddressPools/',variables('lbBE'))]",
        "gwLBName": "[concat('GWPLB',resourceGroup().name)]",
        "publicIPAddressName": "[tolower(concat('adpip',uniqueString(resourceGroup().Id)))]",
        "gwIPAddressID": "[resourceId('Microsoft.Network/publicIPAddresses',parameters('publicIPAddressName'))]",
        "gwlbFE": "GWLBFE",
        "gwlbID": "[resourceId('Microsoft.Network/loadBalancers',variables('gwLBName'))]",
        "gwlbFEConfigID": "[concat(variables('gwlbID'),'/frontendIPConfigurations/',variables('gwlbFE'))]",
        "gwlbBE": "GWLBBE",
        "gwBEAddressPoolID": "[concat(variables('gwlbID'),'/backendAddressPools/',variables('gwlbBE'))]",
        "dnsLabelPrefix": "[tolower(concat('adns', resourceGroup().name))]",
        "storageAccountName": "[tolower(concat('rdsa',uniqueString(resourceGroup().id)))]",
        "storageAccountType": "Standard_LRS",
        "uniqueStorageAccountContainerName": "[tolower(concat('sc', uniqueString(resourceGroup().id)))]",
        "imagePublisher": "MicrosoftWindowsServer",
        "imageOffer": "WindowsServer",
        "vnetAddressRange": "10.0.0.0/16",
        "subnetAddressRange": "10.0.0.0/24",
        "dnsServerPrivateIp": "10.0.0.4",
        "subnet-id": "[concat(resourceId('Microsoft.Network/virtualNetworks', variables('vnetName')),'/subnets/', variables('subnetName'))]",
        "assetLocation": "https://raw.githubusercontent.com/Azure/azure-QuickStart-Templates/master/rds-deployment/",
        "nsgName": "RDSNsg",
        "nsgID": "[resourceId('Microsoft.Network/networkSecurityGroups',variables('nsgName'))]",
        "subnets": [
            {
                "name": "[variables('subnetName')]",
                "properties": {
                    "addressPrefix": "[variables('subnetAddressRange')]",
                    "networkSecurityGroup": {
                        "id": "[variables('nsgID')]"
                    }
                }
            }
        ]
    },
  "resources": [
    {
      "name": "[variables('nsgName')]",
      "type": "Microsoft.Network/networkSecurityGroups",
      "location": "[resourceGroup().location]",
      "apiVersion": "2015-06-15",
      "properties": {
        "securityRules": [
          {
            "name": "rule1",
            "properties": {
              "protocol": "*",
              "sourcePortRange": "*",
              "destinationPortRange": "*",
              "sourceAddressPrefix": "*",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 101,
              "direction": "Inbound"
            }
          }
        ]
      }
    },
    {
      "name": "[variables('vnetName')]",
      "type": "Microsoft.Network/virtualNetworks",
      "location": "[resourceGroup().location]",
      "apiVersion": "2015-06-15",
      "dependsOn": [
        "[variables('nsgID')]"
      ],
      "properties": {
        "addressSpace": {
          "addressPrefixes": [
            "[variables('vnetAddressRange')]"
          ]
        },
        "subnets": [
          {
            "name": "[variables('subnetName')]",
            "properties": {
              "addressPrefix": "[variables('subnetAddressRange')]",
              "networkSecurityGroup": {
                "id": "[variables('nsgID')]"
              }
            }
          }
        ]
      }
    },
    {
      "name": "[variables('publicIPAddressName')]",
      "type": "Microsoft.Network/publicIPAddresses",
      "location": "[resourceGroup().location]",
      "apiVersion": "2015-06-15",
      "dependsOn": [
        "[resourceId('Microsoft.Network/virtualNetworks', variables('vnetName'))]"
      ],
      "properties": {
        "publicIPAllocationMethod": "Dynamic",
        "dnsSettings": {
          "domainNameLabel": "[variables('dnsLabelPrefix')]"
        }
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Compute/availabilitySets",
      "name": "gw-availabilityset",
      "location": "[resourceGroup().location]"
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Compute/availabilitySets",
      "name": "cb-availabilityset",
      "location": "[resourceGroup().location]"
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Compute/availabilitySets",
      "name": "rdsh-availabilityset",
      "location": "[resourceGroup().location]"
    },
    {
      "name": "[variables('gwlbName')]",
      "type": "Microsoft.Network/loadBalancers",
      "apiVersion": "2015-06-15",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[variables('gwIPAddressID')]"
      ],
      "properties": {
        "frontendIPConfigurations": [
          {
            "name": "[variables('gwlbFE')]",
            "properties": {
              "publicIPAddress": {
                "id": "[variables('gwIPAddressID')]"
              }
            }
          }
        ],
        "backendAddressPools": [
          {
            "name": "[variables('gwlbBE')]"
          }
        ],
        "loadBalancingRules": [
          {
            "name": "https",
            "properties": {
              "frontendIPConfiguration": {
                "id": "[variables('gwlbFEConfigID')]"
              },
              "backendAddressPool": {
                "id": "[variables('gwBEAddressPoolID')]"
              },
              "protocol": "Tcp",
              "frontendPort": 443,
              "backendPort": 443,
              "enableFloatingIP": false,
              "idleTimeoutInMinutes": 5,
              "loadDistribution": "SourceIPProtocol",
              "probe": {
                "id": "[concat(variables('gwlbID'),'/probes/httpsProbe')]"
              }
            }
          },
          {
            "name": "udp",
            "properties": {
              "frontendIPConfiguration": {
                "id": "[variables('gwlbFEConfigID')]"
              },
              "backendAddressPool": {
                "id": "[variables('gwBEAddressPoolID')]"
              },
              "protocol": "Udp",
              "frontendPort": 3391,
              "backendPort": 3391,
              "enableFloatingIP": false,
              "idleTimeoutInMinutes": 5,
              "loadDistribution": "SourceIPProtocol",
              "probe": {
                "id": "[concat(variables('gwlbID'),'/probes/udpProbe')]"
              }
            }
          }
        ],
        "probes": [
          {
            "name": "httpsProbe",
            "properties": {
              "protocol": "Tcp",
              "port": 443,
              "intervalInSeconds": 5,
              "numberOfProbes": 2
            }
          },
          {
            "name": "udpProbe",
            "properties": {
              "protocol": "Tcp",
              "port": 3391,
              "intervalInSeconds": 5,
              "numberOfProbes": 2
            }
          }
        ]
      }
    },
    {
      "name": "[variables('adVmDeployment')]",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2016-02-01",
      "dependsOn": [
        "[variables('publiclbID')]"
      ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('adTemplateURL')]",   <<< "adTemplateURL": "[concat(variables('adAssetLocation'),'/adVmTemplate.json')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "adminUsername": {
            "value": "[parameters('adminUsername')]"
          },
          "adminPassword": {
            "value": "[parameters('adminPassword')]"
          },
          "storageAccount": {
            "value": "[variables('adStorageName')]"
          },
          "subnetResourceId": {
            "value": "[variables('staticSubnetID')]"
          },
          "primaryAdIpAddress": {
            "value": "[variables('dnsServerPrivateIp')]"
          },
          "storageAccountType": {
            "value": "[variables('storageAccountType')]"
          },
          "vmName": {
            "value": "[variables('adPDCVMName')]"
          },
          "vmSize": {
            "value": "[variables('adVMSize')]"
          }
        }
      }
    },
    {
      "name": "[variables('deployPrimaryAd')]",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2016-02-01",
      "dependsOn": [
        "[variables('adVmDeploymentID')]"
      ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('deployPrimaryAdTemplateURL')]",    <<< "adTemplateURL": "[concat(variables('adAssetLocation'),'/adVmTemplate.json')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "primaryADName": {
            "value": "[variables('adPDCVMName')]"
          },
          "domainName": {
            "value": "[parameters('domainName')]"
          },
          "adminUsername": {
            "value": "[parameters('adminUsername')]"
          },
          "adminPassword": {
            "value": "[parameters('adminPassword')]"
          },
          "assetLocation": {
            "value": "[variables('adTemplateAssetLocation')]"
          }
        }
      }
    },
    {
      "name": "[variables('updateVNetDNS1')]",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2016-02-01",
      "dependsOn": [
        "[variables('deployPrimaryAdID')]"
      ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('vnetwithDNSTemplateURL')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "virtualNetworkName": {
            "value": "[variables('vnetName')]"
          },
          "virtualNetworkAddressRange": {
            "value": "[variables('vnetAddressRange')]"
          },
          "subnets": {
            "value": "[variables('subnets')]"
          },
          "dnsServerAddress": {
            "value": [
              "[variables('dnsServerPrivateIp')]"
            ]
          }
        }
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Storage/storageAccounts",
      "name": "[variables('storageAccountName')]",
      "location": "[resourceGroup().location]",
      "properties": {
        "accountType": "[variables('storageAccountType')]"
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/networkInterfaces",
      "name": "gw-nic",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[variables('gwlbID')]",
        "[variables('adVmDeploymentID')]"
      ],
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[variables('subnet-id')]"
              },
              "loadBalancerBackendAddressPools": [
                {
                  "id": "[variables('gwBEAddressPoolID')]"
                }
              ]
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/networkInterfaces",
      "name": "cb-nic",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[variables('publiclbID')]",
        "[variables('adVmDeploymentID')]"
      ],
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[variables('subnet-id')]"
              }
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/networkInterfaces",
      "name": "[concat('rdsh-', copyindex(), '-nic')]",
      "location": "[resourceGroup().location]",
      "copy": {
        "name": "rdsh-nic-loop",
        "count": "[parameters('numberOfRdshInstances')]"
      },
      "dependsOn": [
        "[variables('publiclbID')]",
        "[variables('adVmDeploymentID')]"
      ],
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[variables('subnet-id')]"
              }
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Compute/virtualMachines",
      "name": "gw-vm",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[variables('deployPrimaryAdID')]",
        "[concat('Microsoft.Storage/storageAccounts/', variables('storageAccountName'))]",
        "Microsoft.Network/networkInterfaces/gw-nic"
      ],
      "properties": {
        "hardwareProfile": {
          "vmSize": "Standard_A2"
        },
        "availabilitySet": {
          "id": "[resourceId('Microsoft.Compute/availabilitySets', 'gw-availabilityset')]"
        },
        "osProfile": {
          "computerName": "gateway",
          "adminUsername": "[parameters('adminUsername')]",
          "adminPassword": "[parameters('adminPassword')]"
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "[variables('imagePublisher')]",
            "offer": "[variables('imageOffer')]",
            "sku": "[parameters('imageSKU')]",
            "version": "latest"
          },
          "osDisk": {
            "name": "osdisk",
            "vhd": {
              "uri": "[concat(reference(concat('Microsoft.Storage/storageAccounts/', variables('storageAccountName')),providers('Microsoft.Storage', 'storageAccounts').apiVersions[0]).primaryEndpoints.blob,variables('uniqueStorageAccountContainerName'),'/','gw-vm-os-disk.vhd')]"
            },
            "caching": "ReadWrite",
            "createOption": "FromImage"
          }
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces','gw-nic')]"
            }
          ]
        }
      },
      "resources": [
        {
          "apiVersion": "2015-06-15",
          "type": "Microsoft.Compute/virtualMachines/extensions",
          "name": "gw-vm/gateway",
          "location": "[resourceGroup().location]",
          "dependsOn": [
            "[resourceId('Microsoft.Compute/virtualMachines', 'gw-vm')]"
          ],
          "properties": {
            "publisher": "Microsoft.Powershell",
            "type": "DSC",
            "typeHandlerVersion": "2.11",
            "autoUpgradeMinorVersion": true,
            "settings": {
              "modulesUrl": "[concat(variables('assetLocation'),'/Configuration.zip')]",
              "configurationFunction": "Configuration.ps1\\Gateway",
              "Properties": {
                "DomainName": "[parameters('domainName')]",
                "AdminCreds": {
                  "UserName": "[parameters('adminUsername')]",
                  "Password": "PrivateSettingsRef:AdminPassword"
                }
              }
            },
            "protectedSettings": {
              "Items": {
                "AdminPassword": "[parameters('adminPassword')]"
              }
            }
          }
        }
      ]
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Compute/virtualMachines",
      "name": "[concat('rdsh-', copyindex())]",
      "location": "[resourceGroup().location]",
      "copy": {
        "name": "rdsh-vm-loop",
        "count": "[parameters('numberOfRdshInstances')]"
      },
      "dependsOn": [
        "[variables('deployPrimaryAdID')]",
        "[concat('Microsoft.Storage/storageAccounts/', variables('storageAccountName'))]",
        "[concat('Microsoft.Network/networkInterfaces/', 'rdsh-', copyindex(), '-nic')]"
      ],
      "properties": {
        "hardwareProfile": {
          "vmSize": "[parameters('rdshVmSize')]"
        },
        "availabilitySet": {
          "id": "[resourceId('Microsoft.Compute/availabilitySets', 'rdsh-availabilityset')]"
        },
        "osProfile": {
          "computerName": "[concat('rdsh-', copyIndex())]",
          "adminUsername": "[parameters('adminUsername')]",
          "adminPassword": "[parameters('adminPassword')]"
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "[variables('imagePublisher')]",
            "offer": "[variables('imageOffer')]",
            "sku": "[parameters('imageSKU')]",
            "version": "latest"
          },
          "osDisk": {
            "name": "osdisk",
            "vhd": {
              "uri": "[concat(reference(concat('Microsoft.Storage/storageAccounts/', variables('storageAccountName')),providers('Microsoft.Storage', 'storageAccounts').apiVersions[0]).primaryEndpoints.blob,variables('uniqueStorageAccountContainerName'),'/','rdsh-',copyindex(),'-os-disk.vhd')]"

            },
            "caching": "ReadWrite",
            "createOption": "FromImage"
          }
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces',concat('rdsh-', copyindex(), '-nic'))]"
            }
          ]
        }
      },
      "resources": [
        {
          "apiVersion": "2015-06-15",
          "type": "Microsoft.Compute/virtualMachines/extensions",
          "name": "[concat('rdsh-', copyindex(),'/sessionhost')]",
          "location": "[resourceGroup().location]",
          "dependsOn": [
            "[resourceId('Microsoft.Compute/virtualMachines', concat('rdsh-', copyindex()))]"
          ],
          "properties": {
            "publisher": "Microsoft.Powershell",
            "type": "DSC",
            "typeHandlerVersion": "2.11",
            "autoUpgradeMinorVersion": true,
            "settings": {
              "ModulesUrl": "[concat(variables('assetLocation'),'/Configuration.zip')]",
              "ConfigurationFunction": "Configuration.ps1\\SessionHost",
              "Properties": {
                "DomainName": "[parameters('domainName')]",
                "AdminCreds": {
                  "UserName": "[parameters('adminUsername')]",
                  "Password": "PrivateSettingsRef:AdminPassword"
                }
              }
            },
            "protectedSettings": {
              "Items": {
                "AdminPassword": "[parameters('adminPassword')]"
              }
            }
          }
        }
      ]
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Compute/virtualMachines",
      "name": "cb-vm",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[variables('deployPrimaryAdID')]",
        "[concat('Microsoft.Storage/storageAccounts/', variables('storageAccountName'))]",
        "Microsoft.Network/networkInterfaces/cb-nic",
        "rdsh-vm-loop"
      ],
      "properties": {
        "hardwareProfile": {
          "vmSize": "Standard_A2"
        },
        "availabilitySet": {
          "id": "[resourceId('Microsoft.Compute/availabilitySets', 'cb-availabilityset')]"
        },
        "osProfile": {
          "computerName": "broker",
          "adminUsername": "[parameters('adminUsername')]",
          "adminPassword": "[parameters('adminPassword')]"
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "[variables('imagePublisher')]",
            "offer": "[variables('imageOffer')]",
            "sku": "[parameters('imageSKU')]",
            "version": "latest"
          },
          "osDisk": {
            "name": "osdisk",
            "vhd": {
              "uri": "[concat(reference(concat('Microsoft.Storage/storageAccounts/', variables('storageAccountName')),providers('Microsoft.Storage', 'storageAccounts').apiVersions[0]).primaryEndpoints.blob,variables('uniqueStorageAccountContainerName'),'/','cb-vm-os-disk.vhd')]"
            },
            "caching": "ReadWrite",
            "createOption": "FromImage"
          }
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces','cb-nic')]"
            }
          ]
        }
      }
    },
    {
      "type": "Microsoft.Compute/virtualMachines/extensions",
      "name": "cb-vm/rdsdeployment",
      "apiVersion": "2015-06-15",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[resourceId('Microsoft.Compute/virtualMachines', 'cb-vm')]",
        "Microsoft.Compute/virtualMachines/gw-vm/extensions/gateway",
        "rdsh-vm-loop"
      ],
      "properties": {
        "autoUpgradeMinorVersion": true,
        "protectedSettings": {
          "Items": {
            "adminPassword": "[parameters('adminPassword')]"
          }
        },
        "publisher": "Microsoft.Powershell",
        "settings": {
          "modulesUrl": "[concat(variables('assetLocation'),'/Configuration.zip')]",
          "configurationFunction": "Configuration.ps1\\RDSDeployment",
          "Properties": {
            "adminCreds": {
              "UserName": "[parameters('adminUsername')]",
              "Password": "PrivateSettingsRef:adminPassword"
            },
            "connectionBroker": "[concat('broker.',parameters('domainName'))]",
            "domainName": "[parameters('domainName')]",
            "externalfqdn": "[reference(parameters('publicIPAddressName')).dnsSettings.fqdn]",
            "numberOfRdshInstances": "[parameters('numberOfRdshInstances')]",
            "sessionHostNamingPrefix": "rdsh-",
            "webAccessServer": "[concat('gateway.',parameters('domainName'))]"
          }
        },
        "type": "DSC",
        "typeHandlerVersion": "2.11"
      }
    }
  ],
  "outputs": {
    "fqdn": {
        "type": "string",
        "value": "[reference(parameters('publicIPAddressName')).dnsSettings.fqdn]"
    },
    "ipaddress": {
        "type": "string",
        "value": "[reference(parameters('publicIPAddressName')).ipAddress]"
    },
    "rdWebUrl": {
        "type": "string",
        "value": "[concat('https://', reference(parameters('publicIPAddressName')).dnsSettings.fqdn, '/rdweb')]"
    }
  }
}
